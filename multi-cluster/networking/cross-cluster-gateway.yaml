# Orion Vision Core - Cross-Cluster Gateway Configuration
# Sprint 5.2.1 - Multi-Cluster Networking

# Cross-Cluster Gateway for East-West Traffic
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: cross-cluster-gateway
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-cluster-gateway
    app.kubernetes.io/component: networking
spec:
  selector:
    istio: eastwestgateway
  servers:
  # TLS port for secure cross-cluster communication
  - port:
      number: 15443
      name: tls
      protocol: TLS
    tls:
      mode: ISTIO_MUTUAL
    hosts:
    - "*.local"
    - "*.orion-system.global"
    - "*.istio-system.global"
  # HTTP port for cross-cluster communication
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*.orion-system.global"
  # HTTPS port for secure HTTP traffic
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: ISTIO_MUTUAL
    hosts:
    - "*.orion-system.global"
  # gRPC port for service mesh control plane
  - port:
      number: 15010
      name: grpc-xds
      protocol: GRPC
    tls:
      mode: ISTIO_MUTUAL
    hosts:
    - "*.istio-system.global"
  # Discovery port for cross-cluster service discovery
  - port:
      number: 15012
      name: discovery
      protocol: GRPC
    tls:
      mode: ISTIO_MUTUAL
    hosts:
    - "*.istio-system.global"

---
# Cross-Cluster Virtual Service for Traffic Routing
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: cross-cluster-routing
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-cluster-routing
    app.kubernetes.io/component: traffic-management
spec:
  hosts:
  - "*.orion-system.global"
  gateways:
  - cross-cluster-gateway
  - mesh
  http:
  # Route based on cluster preference header
  - match:
    - headers:
        x-cluster-preference:
          exact: "primary"
    route:
    - destination:
        host: orion-core.orion-system.svc.cluster.local
      weight: 100
    headers:
      request:
        add:
          x-routed-by: "cross-cluster-gateway"
          x-target-cluster: "primary"
  - match:
    - headers:
        x-cluster-preference:
          exact: "remote"
    route:
    - destination:
        host: orion-core.orion-system.svc.cluster.local
      weight: 100
    headers:
      request:
        add:
          x-routed-by: "cross-cluster-gateway"
          x-target-cluster: "remote"
  # Default routing with load balancing
  - match:
    - uri:
        prefix: "/api/v1/"
    route:
    - destination:
        host: orion-core.orion-system.svc.cluster.local
      weight: 70
    - destination:
        host: orion-core.orion-system.svc.cluster.local
      weight: 30
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: gateway-error,connect-failure,refused-stream
    headers:
      request:
        add:
          x-routed-by: "cross-cluster-gateway"
          x-load-balanced: "true"
  # Health check routing
  - match:
    - uri:
        exact: "/health"
    - uri:
        exact: "/ready"
    route:
    - destination:
        host: orion-core.orion-system.svc.cluster.local
      weight: 100
    timeout: 5s
    headers:
      request:
        add:
          x-health-check: "cross-cluster"
  # Metrics routing
  - match:
    - uri:
        exact: "/metrics"
    route:
    - destination:
        host: orion-core.orion-system.svc.cluster.local
      weight: 100
    timeout: 10s
    headers:
      request:
        add:
          x-metrics-source: "cross-cluster"

---
# Cross-Cluster Destination Rule for Traffic Policies
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: cross-cluster-destination-rule
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-cluster-destination-rule
    app.kubernetes.io/component: traffic-management
spec:
  host: "*.orion-system.global"
  trafficPolicy:
    loadBalancer:
      localityLbSetting:
        enabled: true
        distribute:
        # Primary cluster preference
        - from: "region1/zone1/*"
          to:
            "region1/zone1/*": 80
            "region2/zone1/*": 20
        # Remote cluster preference
        - from: "region2/zone1/*"
          to:
            "region2/zone1/*": 80
            "region1/zone1/*": 20
        failover:
        # Failover from primary to remote
        - from: region1
          to: region2
        # Failover from remote to primary
        - from: region2
          to: region1
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        tcpKeepalive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        h2UpgradePolicy: UPGRADE
    circuitBreaker:
      consecutiveErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 30
      splitExternalLocalOriginErrors: true
    outlierDetection:
      consecutiveGatewayErrors: 5
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 30
  portLevelSettings:
  - port:
      number: 80
    loadBalancer:
      consistentHash:
        httpHeaderName: "x-user-id"
  - port:
      number: 443
    loadBalancer:
      consistentHash:
        httpCookieName: "session-id"

---
# Cross-Cluster Service Entry for External Services
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: cross-cluster-external-services
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-cluster-external-services
    app.kubernetes.io/component: service-discovery
spec:
  hosts:
  - external-api.orion-platform.com
  - monitoring.orion-platform.com
  - logging.orion-platform.com
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  - number: 80
    name: http
    protocol: HTTP
  location: MESH_EXTERNAL
  resolution: DNS

---
# Cross-Cluster Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cross-cluster-network-policy
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-cluster-network-policy
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      istio: eastwestgateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow cross-cluster traffic
  - from:
    - namespaceSelector:
        matchLabels:
          name: orion-system
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - podSelector:
        matchLabels:
          app: istiod
    ports:
    - protocol: TCP
      port: 15443
    - protocol: TCP
      port: 15010
    - protocol: TCP
      port: 15012
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  # Allow external cluster access
  - from: []
    ports:
    - protocol: TCP
      port: 15443
  egress:
  # Allow outbound to other clusters
  - to: []
    ports:
    - protocol: TCP
      port: 15443
    - protocol: TCP
      port: 15010
    - protocol: TCP
      port: 15012
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
# Cross-Cluster Peer Authentication
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: cross-cluster-mtls
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-cluster-mtls
    app.kubernetes.io/component: security
spec:
  selector:
    matchLabels:
      istio: eastwestgateway
  mtls:
    mode: STRICT
  portLevelMtls:
    15443:
      mode: STRICT
    15010:
      mode: STRICT
    15012:
      mode: STRICT

---
# Cross-Cluster Authorization Policy
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: cross-cluster-authz
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-cluster-authz
    app.kubernetes.io/component: security
spec:
  selector:
    matchLabels:
      istio: eastwestgateway
  rules:
  # Allow cross-cluster service mesh traffic
  - from:
    - source:
        principals:
        - "cluster.local/ns/istio-system/sa/istio-proxy"
        - "cluster.local/ns/orion-system/sa/orion-core"
        - "cluster.local/ns/orion-system/sa/orion-discovery"
        - "cluster.local/ns/orion-system/sa/orion-orchestration"
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        paths: ["/api/*", "/health", "/ready", "/metrics"]
    when:
    - key: source.cluster
      values: ["orion-primary", "orion-remote"]
  # Allow istiod control plane traffic
  - from:
    - source:
        principals:
        - "cluster.local/ns/istio-system/sa/istiod"
    to:
    - operation:
        ports: ["15010", "15012"]
  # Allow monitoring traffic
  - from:
    - source:
        namespaces: ["monitoring"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/metrics", "/stats/*"]

---
# Cross-Cluster Telemetry Configuration
apiVersion: telemetry.istio.io/v1alpha1
kind: Telemetry
metadata:
  name: cross-cluster-telemetry
  namespace: istio-system
  labels:
    app.kubernetes.io/name: cross-cluster-telemetry
    app.kubernetes.io/component: observability
spec:
  selector:
    matchLabels:
      istio: eastwestgateway
  metrics:
  - providers:
    - name: prometheus
  - overrides:
    - match:
        metric: ALL_METRICS
      tagOverrides:
        source_cluster:
          value: "%{SOURCE_CLUSTER}"
        destination_cluster:
          value: "%{DESTINATION_CLUSTER}"
        cross_cluster:
          value: "true"
  tracing:
  - providers:
    - name: jaeger
  accessLogging:
  - providers:
    - name: otel
  - overrides:
    - match:
        mode: CLIENT
      providers:
      - name: otel
